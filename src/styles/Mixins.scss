// Responsive Media Queries
@mixin responsive_desktop_only($min-width: 1024px) {
	@media only screen and (min-width: $min-width) {
		@content;
	}
}

@mixin responsive_mobile_only($max-width: 1024px) {
	@media only screen and (max-width: $max-width) {
		@content;
	}
}
//** Text Effects **
@mixin textWithShadow($color: var(--background), $shadowWidth: 2px) {
	text-shadow: 0 0 $shadowWidth $color;
}
//********************************************************************************

// *** Box-Shadows ***
@mixin dayShadow {
	// box-shadow: -2px -2px 20px 0px gold, 2px 2px 15px 2px purple;
	box-shadow: -2px -2px 20px 0 hsla(216, 42%, 48%, 0.63),
		2px 2px 15px 2px hsla(var(--accent-value), 50%);
	transition: box-shadow 200ms ease-in-out;
}

@mixin nightShadow {
	box-shadow: -2px -2px 20px 0 hsla(104, 52%, 43%, 0.54),
		2px 2px 15px 2px hsla(var(--accent-value), 50%);
	transition: box-shadow 200ms ease-in-out;
}

@mixin normalShadow {
	box-shadow: 0 0 4px 2px hsla(var(--text-value), 50%);
}

@mixin hoverBoxShadow {
	&:hover {
		box-shadow: 0 0 10px 5px hsla(0, 0%, 0%, 0.2);
		transform: scale(0.98);
		@content;
	}
}

@mixin glassShadow {
	box-shadow: 0 0 15px 0 hsla(0, 0%, 0%, 0.5);
}
// ******************************************

// Rounded Elements (border-radius)
@mixin rounded($radius: 3rem) {
	border-radius: $radius;
}

@mixin fillAvailableWidth {
	width: auto;
	width: fill-available;
	width: available;
}

@mixin centerAIJC {
	align-items: center;
	justify-content: center;
}

@mixin flexCenter($gap: null) {
	@include centerAIJC;
	display: flex;
	gap: $gap;
}

@mixin gridCenter($grid: grid, $gap: null) {
	@include centerAIJC;
	display: $grid;
	gap: $gap;
}

@mixin stickyToTop {
	position: sticky;
	top: 0;
}

@mixin gridAndGap($gap: 10px) {
	display: grid;
	gap: $gap;
}

@mixin cell {
	@include centerAIJC;
	@include defaultTransition;
	@include fillAvailableWidth;
	@include flexCenter;
	font-family: 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Open Sans', 'Helvetica Neue',
		'sans-serif';
	font-size: 1rem;
	padding: var(--padding-half-normal);
	border-radius: 2vh; // or 20px?
	box-sizing: border-box;
	background-color: white;
	color: black;
}

@mixin editableCell($frosted: true) {
	@include cell;

	@if ($frosted) {
		@include frostedGlass;
	}

	@include normalShadow;
	width: max-content;
	max-width: 100%;

	&:hover,
	&:focus {
		cursor: text;
		filter: brightness(105%);
		outline: none;

		@include dayShadow;

		&:focus {
			@include nightShadow;
		}
	}
}

@mixin editableInput($frosted: true) {
	@include editableCell($frosted);
}

@mixin padded {
	padding: 1em;
}

@mixin centeredButton {
	@include centerAIJC;
	margin: auto;
}

@mixin defaultTransition {
	transition: all 300ms ease-in-out;
}

@mixin noBorder {
	border: none;
}

@mixin thinnestBorder {
	border: 0.1px solid hsla(0, 0%, 0%, 0.2);
}

@mixin cursorPointerAlways {
	cursor: pointer;

	&:hover,
	&:focus {
		cursor: pointer;
	}
}

@mixin noOutline {
	outline: none;
}

@mixin frostedGlass {
	backdrop-filter: blur(3px);
}

@mixin frostedGlassHighContrast {
	backdrop-filter: blur(3px);
	color: black;
}

@mixin cloudyBackground {
	color: black; // override the default color to maintain high contrast with whitish background
	background: radial-gradient(hsla(0, 0%, 100%, 0.7), hsla(0, 0%, 100%, 0.3));
}

@mixin defaultButtonStyles {
	@include frostedGlass;
	@include glassShadow;
	@include rounded(5vh);
	@include centeredButton;
	@include hoverBoxShadow;
	@include defaultTransition;
	@include thinnestBorder;
	@include cursorPointerAlways;
	@include noOutline;
	display: flex;
	width: auto;
	font-size: 1rem;
	color: var(--text);
	padding: var(--padding-normal);

	&:focus {
		@include nightShadow;
	}

	&:hover {
		@include dayShadow;
	}
}

@mixin discreetButtonStyles {
	background: transparent;
	box-shadow: none;
	border: none;
	border-radius: 1em;
}

@mixin fadeOut {
	animation: both fadeOut 1s linear;

	@keyframes fadeOut {
		from {
			opacity: 100%;
		}

		to {
			opacity: 0%;
		}
	}
}

// trick the browser into using hardware acceleration (GPU) for expensive animations
@mixin accelerate {
	--webkit-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
}

@mixin active(
	$color: var(--accent-value, currentColor),
	$textDecorationColor: var(--accent-value, currentColor),
	$backgroundColor: var(--accent-value, currentColor),
	$backgroundAlpha: 0.8
) {
	color: $color;
	text-decoration: underline 2px $textDecorationColor;
	background-color: hsla($backgroundColor, $backgroundAlpha);
}

@mixin pulse(
	$color: var(--accent-value),
	$pulseDistance: 10px,
	$duration: 2.5s,
	$opacity: 40%,
	$iterationCount: infinite
) {
	animation: pulse $duration $iterationCount;

	@keyframes pulse {
		0% {
			box-shadow: 0 0 0 0 hsla($color, $opacity);
		}

		50% {
			box-shadow: 0 0 0 $pulseDistance hsla($color, 0%);
		}

		100% {
			box-shadow: 0 0 0 0 hsla($color / 0%);
		}
	}

	@keyframes pulse {
		0% {
			box-shadow: 0 0 0 0 hsla($color, $opacity);
			box-shadow: 0 0 0 0 hsla($color, $opacity);
		}

		50% {
			box-shadow: 0 0 0 $pulseDistance hsla($color, 0%);
			box-shadow: 0 0 0 $pulseDistance hsla($color, 0%);
		}

		100% {
			box-shadow: 0 0 0 0 hsla($color, 0%);
			box-shadow: 0 0 0 0 hsla($color, 0%);
		}
	}

	&:hover,
	&:focus-within {
		animation: none;
	}
}

@mixin defaultContainerStyles {
	@include glassShadow;
	@include rounded(5vh);
	@include centeredButton;
	@include defaultTransition;
	@include thinnestBorder;
	@include noOutline;
	width: auto;
	font-size: 1rem;
	color: var(--text);
	padding: var(--padding-normal);

	&:focus {
		@include nightShadow;
	}
	&:hover {
		@include dayShadow;
	}
}

@mixin accentedContainer($alpha: 100%) {
	background-color: hsla(var(--accent-value), $alpha);
}
@mixin accentedContainerDarkMode($alpha: 40%) {
	background-color: hsla(var(--accent-value), $alpha);
	box-shadow: 0 0 6px 3px hsla(var(--accent-value), 30%);
}

@mixin spin {
	animation: spin 0.3s infinite cubic-bezier(0.6, 0.04, 0.98, 0.335);

	@keyframes spin {
		0% {
			transform: rotateX(0deg);
		}

		50% {
			transform: rotateX(180deg);
		}

		100% {
			transform: rotate3d(360deg);
		}
	}
}

@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $inset: null) {
	position: $position;
	@if ($inset) {
		inset: $inset;
	} @else {
		top: $top;
		right: $right;
		bottom: $bottom;
		left: $left;
	}
}

@mixin absolute($args...) {
	@include position(absolute, $args...);
}

@mixin fixed($args...) {
	@include position(fixed, $args...);
}

@mixin relative($args...) {
	@include position(relative, $args...);
}

@mixin styledButton {
	@include defaultButtonStyles;
	font-weight: bold;
	color: white;
	text-shadow: 1px 1px 10px black;
	width: 100%;
	box-shadow: 4px 4px 15px 5px hsla(0, 0%, 0%, 0.5);
	border: 4px solid hsla(var(--accent-value), 80%);
	background: radial-gradient(
		hsla(var(--accent-value), 70%) 50%,
		hsla(var(--accent-value), 40%) 100%
	);
}
@mixin styledButtonDark {
	@include styledButton;
	text-shadow: none;
	background: radial-gradient(
		hsla(var(--accent-value), 20%) 40%,
		hsla(var(--accent-value), 40%) 80%
	);
}

@mixin hiddenInput {
	visibility: hidden;
	height: 0;
	width: 0;
	display: none;
}

@mixin deletionButton() {
	@include styledButton;
	background: darkred;
	border: 4px solid firebrick;
}

@mixin defaultSelect {
	@include frostedGlassHighContrast;
	@include rounded;
	@include cursorPointerAlways;
	display: inline-flex;
	padding: var(--padding-normal);
	font-weight: bold;
	max-width: 100%;

	&:focus {
		@include nightShadow;
	}

	&:hover {
		@include dayShadow;
	}
}

@mixin admin {
	color: var(--admin, darkred);
	border: var(--adminBorder, darkred) solid 1px;
	background: var(--adminBackground, hsl(0deg 35% 75%));
}
@mixin defaultPseudoElement {
	@include absolute($inset: 0);
	content: '';
	border-radius: inherit;
}
